name: CI/CD Deploy Backend to VPS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Apply Prisma migrations
        run: pnpm exec prisma migrate deploy
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Generate Prisma Client
        run: pnpm exec prisma generate

      - name: Build project
        run: pnpm run build

      - name: Copy Code to VPS
        run: |
          echo "${{ secrets.VPS_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          mkdir -p .github/temp_build/Code
          cp -r dist package.json pnpm-lock.yaml Dockerfile prisma .github/temp_build/Code/
          tar -czf code.tar.gz -C .github/temp_build/Code .
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "
            mkdir -p /home/root/BE &&
            rm -rf /home/root/BE/dist
          "
          scp -o StrictHostKeyChecking=no -i private_key.pem code.tar.gz \
            ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/home/root/BE/
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "
            cd /home/root/BE &&
            tar -xzf code.tar.gz &&
            rm code.tar.gz
          "
          rm -f private_key.pem

      - name: Restart backend container
        run: |
          echo "${{ secrets.VPS_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "
            cd /home/root/BE &&
            docker compose down &&
            docker compose up -d --build
          "
          rm -f private_key.pem
