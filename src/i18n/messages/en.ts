export const enMessages = {
  auth: {
    LOGIN_SUCCESS: 'Login successful',
    REGISTER_SUCCESS: 'Registration successful',
    LOGOUT_SUCCESS: 'Logout successful',
    FORGOT_PASSWORD_SUCCESS: 'Password reset successful',
    UPDATE_PROFILE_SUCCESS: 'Profile updated successfully',
    GET_PROFILE_SUCCESS: 'Profile retrieved successfully',
    PHONE_IS_INVALID: 'Invalid phone number',
    NAME_IS_REQUIRED: 'Name is required',
    REFRESH_TOKEN_SUCCESS: 'Token refreshed successfully',
    INVALID_OTP: 'Invalid or expired OTP',
    OTP_EXPIRED: 'OTP has expired',
    FAILED_TO_SEND_OTP: 'Failed to send OTP',
    EMAIL_ALREADY_EXISTS: 'Email already exists',
    NOT_FOUND_EMAIL: 'Email not found',
    EMAIL_INACTIVE: 'Email not activated',
    EMAIL_ACTIVE: 'Email already activated',
    REFRESH_TOKEN_ALREADY_USED: 'Refresh token already used',
    UNAUTHORIZED_ACCESS: 'Unauthorized access',
    ACCOUNT_IS_BANNED: 'Account has been banned',
    FAILD_TO_GET_GOOGLE_USER_INFO: 'Failed to get Google user info',
    RESET_PASSWORD_SUCCESS: 'Password reset successful',
    SEND_OTP_SUCCESS: 'OTP sent successfully',
    VERIFY_OTP_FORGOT_PASSWORD_SUCCESS: 'OTP verification successful',
    CHANGE_PASSWORD_SUCCESS: 'Password changed successfully',
    INVALID_PASSWORD: 'Invalid password',
    UNVERIFIED_ACCOUNT:
      'Account not verified, please check your email to verify your account',
    NEED_DEVICE_VERIFICATION:
      'This is the first login from this device. Please check your email for verification.',
    INVALID_TOTP: 'Invalid TOTP code',
    TOTP_ALREADY_ENABLED: 'TOTP is already enabled',
    TOTP_NOT_ENABLED: 'TOTP is not enabled',
    INVALID_TOTP_AND_CODE: 'Invalid TOTP and verification code',
    OTP_AUTHENTICATION_SUCCESS: 'OTP authentication successful',
    FAIL_TO_LOGIN: 'Incorrect email or password',
    FIRST_LOGIN:
      'This is the first login from this device. Please check your email for verification.',
    NOT_FIRST_LOGIN: 'This device has been previously verified.',
    INVALID_NEW_PASSWORD_CONFIRM_PASSWORD_REGISTER:
      'Password and confirm password do not match',
    INVALID_NEW_PASSWORD_CONFIRM_PASSWORD:
      'New password and confirm password do not match',
    INVALID_OLD_PASSWORD: 'Old password is incorrect',
    NOT_FOUND_RECORD: 'Record not found',
    PASSWORD_MUST_BE_MATCH: 'Password must match',
    MISSING_TOKEN: 'Missing authentication token',
    INVALID_TOKEN: 'Invalid authentication token'
  },
  reward: {
    CREATE_SUCCESS: 'Reward created successfully',
    UPDATE_SUCCESS: 'Reward updated successfully',
    DELETE_SUCCESS: 'Reward deleted successfully',
    GET_SUCCESS: 'Reward retrieved successfully',
    GET_LIST_SUCCESS: 'Reward list retrieved successfully',
    NOT_FOUND: 'Reward not found',
    ALREADY_EXISTS: 'Reward already exists',
    INVALID_DATA: 'Invalid reward data',
    NAME_REQUIRED: 'Reward name is required'
  },
  wordtype: {
    CREATE_SUCCESS: 'Word type created successfully',
    UPDATE_SUCCESS: 'Word type updated successfully',
    DELETE_SUCCESS: 'Word type deleted successfully',
    GET_SUCCESS: 'Word type retrieved successfully',
    GET_LIST_SUCCESS: 'Word type list retrieved successfully',
    GET_STATS_SUCCESS: 'Word type statistics retrieved successfully',
    CREATE_DEFAULT_SUCCESS: 'Default word types created successfully'
  },
  system: {
    NOT_FOUND: 'Record not found',
    INVALID_NEW_PASSWORD_CONFIRM_PASSWORD:
      'New password and confirm password do not match',
    INVALID_NEW_PASSWORD_CONFIRM_PASSWORD_REGISTER:
      'Password and confirm password do not match',
    INVALID_PASSWORD: 'Invalid password',
    INVALID_OLD_PASSWORD: 'Old password is incorrect',
    SESSION_EXPIRED: 'Session expired, please login again',
    UNAUTHORIZED: 'Unauthorized access'
  },
  level: {
    CREATE_SUCCESS: 'Level created successfully',
    UPDATE_SUCCESS: 'Level updated successfully',
    DELETE_SUCCESS: 'Level deleted successfully',
    GET_SUCCESS: 'Level retrieved successfully',
    GET_LIST_SUCCESS: 'Level list retrieved successfully',
    NOT_FOUND: 'Level not found',
    ALREADY_EXISTS: 'Level already exists',
    INVALID_DATA: 'Invalid level data',
    LEVEL_NUMBER_REQUIRED: 'Level number is required',
    LEVEL_NUMBER_MIN: 'Level number must be greater than or equal to 1',
    REQUIRED_EXP_REQUIRED: 'Required experience is required',
    LEVEL_TYPE_REQUIRED: 'Level type is required',
    NEXT_LEVEL_ID_REQUIRED: 'Next level ID is required',
    REWARD_ID_REQUIRED: 'Reward ID is required',
    CONFLICT_TYPE_NEXT_LEVEL:
      'Invalid next level (must be same type and consecutive level number)'
  },
  elemental_type: {
    CREATE_SUCCESS: 'Elemental type created successfully',
    UPDATE_SUCCESS: 'Elemental type updated successfully',
    DELETE_SUCCESS: 'Elemental type deleted successfully',
    GET_SUCCESS: 'Elemental type retrieved successfully',
    GET_LIST_SUCCESS: 'Elemental type list retrieved successfully',
    NOT_FOUND: 'Elemental type not found',
    ALREADY_EXISTS: 'Elemental type already exists',
    INVALID_DATA: 'Invalid elemental type data',
    TYPE_NAME_REQUIRED: 'Type name is required',
    TYPE_NAME_MAX_LENGTH: 'Type name too long (max 20 characters)',
    DISPLAY_NAME_REQUIRED: 'Display name is required',
    INVALID_COLOR_HEX: 'Invalid hex color code (e.g.: #FF0000)'
  },
  type_effectiveness: {
    CREATE_SUCCESS: 'Type effectiveness created successfully',
    UPDATE_SUCCESS: 'Type effectiveness updated successfully',
    DELETE_SUCCESS: 'Type effectiveness deleted successfully',
    GET_SUCCESS: 'Type effectiveness retrieved successfully',
    GET_LIST_SUCCESS: 'Type effectiveness list retrieved successfully',
    NOT_FOUND: 'Type effectiveness not found',
    ALREADY_EXISTS: 'Type effectiveness already exists',
    INVALID_DATA: 'Invalid type effectiveness data',
    INVALID_MULTIPLIER: 'Invalid multiplier',
    INVALID_ID: 'Invalid ID',
    ATTACK_TYPE_ID_REQUIRED: 'Attack type ID is required',
    DEFENSE_TYPE_ID_REQUIRED: 'Defense type ID is required',
    MULTIPLIER_REQUIRED: 'Multiplier is required',
    MULTIPLIER_MIN: 'Multiplier must be greater than 0',
    MULTIPLIER_MAX: 'Multiplier must be less than or equal to 10',
    CONFLICT_ATTACK_DEFENSE_TYPE: 'Attack type and defense type cannot be the same',
    MULTIPLIER_INVALID:
      'Multiplier must be one of the following values: 0, 0.25, 0.5, 1, 2, or 4'
  },
  pokemon: {
    CREATE_SUCCESS: 'Pokemon created successfully',
    UPDATE_SUCCESS: 'Pokemon updated successfully',
    DELETE_SUCCESS: 'Pokemon deleted successfully',
    GET_LIST_SUCCESS: 'Pokemon list retrieved successfully',
    GET_DETAIL_SUCCESS: 'Pokemon details retrieved successfully',
    INVALID_ID: 'Invalid Pokemon ID',
    NOT_FOUND: 'Pokemon not found',
    ALREADY_EXISTS: 'Pokemon already exists',
    POKEDEX_NUMBER_REQUIRED: 'Pokedex number is required',
    NAME_JP_REQUIRED: 'Japanese name is required',
    ASSIGN_TYPES_SUCCESS: 'Types assigned to Pokemon successfully',
    INVALID_EVOLUTION: 'Invalid evolution - Evolution Pokemon must have higher level',
    POKEDEX_INVALID: 'Invalid Pokedex number',
    NAME_JP_INVALID: 'Invalid Japanese name',
    NAME_TRANSLATIONS_INVALID: 'Invalid name translations',
    NEED_AT_LEAST_ONE_TYPE: 'Pokemon must have at least one type',
    NEED_EVOLUTION: 'If there is an evolution, condition level must be provided',
    INVALID_FORMAT: 'Data is in an invalid format',
    NO_TYPE_WEAKNESS: 'Pokemon has no type weaknesses',
    GET_EVOLUTION_OPTIONS_SUCCESS: 'Evolution options retrieved successfully',
    CALCULATE_WEAKNESS_SUCCESS: 'Pokemon weakness calculated successfully'
  },
  user_pokemon: {
    CREATE_SUCCESS: 'User Pokemon created successfully',
    UPDATE_SUCCESS: 'User Pokemon updated successfully',
    DELETE_SUCCESS: 'User Pokemon deleted successfully',
    GET_LIST_SUCCESS: 'User Pokemon list retrieved successfully',
    GET_DETAIL_SUCCESS: 'User Pokemon details retrieved successfully',
    INVALID_ID: 'Invalid User Pokemon ID',
    NOT_FOUND: 'User Pokemon not found',
    NICKNAME_ALREADY_EXISTS: 'Nickname already exists',
    ERROR_INIT_LEVEL: 'Error initializing level for User Pokemon',
    INVALID_ACCESS_POKEMON: 'You do not have permission to access this Pokemon',
    INVALID_NEXT_POKEMON: 'This Pokemon cannot evolve into the selected Pokemon',
    CANNOT_EVOLVE: 'This Pokemon cannot evolve further',
    USER_HAS_POKEMON: 'User already has this Pokemon',
    INVALID_NICKNAME: 'Invalid nickname (max 50 characters)',
    INVALID_EXP: 'Invalid EXP (must be greater than or equal to 0)',
    SET_MAIN_POKEMON_SUCCESS: 'Main Pokemon set successfully',
    EVOLVE_SUCCESS: 'Pokemon evolved successfully',
    ADD_EXP_SUCCESS: 'EXP added to Pokemon successfully',
    LEVEL_UP_SUCCESS: 'Pokemon leveled up successfully',
    GET_STATS_SUCCESS: 'User Pokemon stats retrieved successfully'
  },
  user: {
    GET_LIST_SUCCESS: 'User list retrieved successfully',
    GET_DETAIL_SUCCESS: 'User details retrieved successfully',
    CREATE_SUCCESS: 'User created successfully',
    UPDATE_SUCCESS: 'User updated successfully',
    DELETE_SUCCESS: 'User deleted successfully',
    NOT_FOUND: 'User not found',
    EMAIL_ALREADY_EXISTS: 'Email already exists',
    INVALID_DATA: 'Invalid user data',
    INVALID_EMAIL: 'Invalid email',
    NAME_REQUIRED: 'Name is required',
    PASSWORD_MIN: 'Password must be at least 6 characters',
    PHONE_INVALID: 'Invalid phone number',
    SET_MAIN_POKEMON_SUCCESS: 'Main Pokemon set successfully'
  },
  role: {
    CREATE_SUCCESS: 'Role created successfully',
    UPDATE_SUCCESS: 'Role updated successfully',
    DELETE_SUCCESS: 'Role deleted successfully',
    GET_SUCCESS: 'Role retrieved successfully',
    GET_LIST_SUCCESS: 'Role list retrieved successfully',
    NOT_FOUND: 'Role not found',
    ALREADY_EXISTS: 'Role already exists',
    PROHIBITED_ACTION_ON_BASE_ROLE: 'Cannot perform this action on base role'
  },
  permission: {
    CREATE_SUCCESS: 'Permission created successfully',
    UPDATE_SUCCESS: 'Permission updated successfully',
    DELETE_SUCCESS: 'Permission deleted successfully',
    GET_SUCCESS: 'Permission retrieved successfully',
    GET_LIST_SUCCESS: 'Permission list retrieved successfully',
    NOT_FOUND: 'Permission not found',
    ALREADY_EXISTS: 'Permission already exists'
  },
  validation: {
    INVALID_DATA: 'Invalid data provided',
    REQUIRED: 'This field is required',
    INVALID_FORMAT: 'Invalid format',
    INVALID_USER_ID: 'Invalid user ID'
  },
  common: {
    SUCCESS: 'Operation successful',
    ERROR: 'An error occurred',
    INVALID_DATA: 'Invalid data provided',
    UNAUTHORIZED: 'Unauthorized access',
    FORBIDDEN: 'Access forbidden',
    LANGUAGE_NOT_EXIST_TO_TRANSLATE: 'Language does not exist to translate'
  },
  entity: {
    INVALID_DATA: 'Invalid data provided',
    NOT_FOUND: 'Record not found',
    ALREADY_EXISTS: 'Record already exists',
    INVALID_ID: 'Invalid ID',
    GET_LIST_SUCCESS: 'Record list retrieved successfully',
    GET_SUCCESS: 'Record retrieved successfully',
    CREATE_SUCCESS: 'Record created successfully',
    UPDATE_SUCCESS: 'Record updated successfully',
    DELETE_SUCCESS: 'Record deleted successfully'
  },
  achievement_group: {
    CREATE_SUCCESS: 'Achievement group created successfully',
    UPDATE_SUCCESS: 'Achievement group updated successfully',
    DELETE_SUCCESS: 'Achievement group deleted successfully',
    GET_SUCCESS: 'Achievement group retrieved successfully',
    GET_LIST_SUCCESS: 'Achievement group list retrieved successfully',
    NOT_FOUND: 'Achievement group not found',
    ALREADY_EXISTS: 'Achievement group already exists',
    INVALID_DATA: 'Invalid achievement group data',
    NAME_REQUIRED: 'Achievement group name is required'
  },
  daily_request: {
    CREATE_SUCCESS: 'Daily request created successfully',
    UPDATE_SUCCESS: 'Daily request updated successfully',
    DELETE_SUCCESS: 'Daily request deleted successfully',
    GET_SUCCESS: 'Daily request retrieved successfully',
    GET_LIST_SUCCESS: 'Daily request list retrieved successfully',
    NOT_FOUND: 'Daily request not found',
    ALREADY_EXISTS: 'Daily request already exists'
  },
  translation: {
    DUPLICATE_LANGUAGE: 'Duplicate language',
    ALREADY_EXISTS: 'Translation already exists',
    DUPLICATE_VALUE: 'Duplicate translation value'
  },
  user_daily_request: {
    CREATE_SUCCESS: 'User daily request created successfully',
    UPDATE_SUCCESS: 'User daily request updated successfully',
    DELETE_SUCCESS: 'User daily request deleted successfully',
    GET_SUCCESS: 'User daily request retrieved successfully',
    GET_LIST_SUCCESS: 'User daily request list retrieved successfully',
    NOT_FOUND: 'User daily request not found',
    ALREADY_EXISTS: 'User daily request already exists',
    USER_ALREADY_ATTENDED_TODAY: 'User has already attended today'
  },
  achievement: {
    CREATE_SUCCESS: 'Achievement created successfully',
    UPDATE_SUCCESS: 'Achievement updated successfully',
    DELETE_SUCCESS: 'Achievement deleted successfully',
    GET_SUCCESS: 'Achievement retrieved successfully',
    GET_LIST_SUCCESS: 'Achievement list retrieved successfully',
    NOT_FOUND: 'Achievement not found',
    ALREADY_EXISTS: 'Achievement already exists'
  },
  daily_request_category: {
    CREATE_SUCCESS: 'Daily request category created successfully',
    UPDATE_SUCCESS: 'Daily request category updated successfully',
    DELETE_SUCCESS: 'Daily request category deleted successfully',
    GET_SUCCESS: 'Daily request category retrieved successfully',
    GET_LIST_SUCCESS: 'Daily request category list retrieved successfully',
    NOT_FOUND: 'Daily request category not found',
    ALREADY_EXISTS: 'Daily request category already exists'
  },
  attendence_config: {
    CREATE_SUCCESS: 'Attendance configuration created successfully',
    UPDATE_SUCCESS: 'Attendance configuration updated successfully',
    DELETE_SUCCESS: 'Attendance configuration deleted successfully',
    GET_SUCCESS: 'Attendance configuration retrieved successfully',
    GET_LIST_SUCCESS: 'Attendance configuration list retrieved successfully',
    NOT_FOUND: 'Attendance configuration not found',
    ALREADY_EXISTS: 'Attendance configuration already exists'
  },
  attendance: {
    CREATE_SUCCESS: 'Attendance record created successfully',
    UPDATE_SUCCESS: 'Attendance record updated successfully',
    DELETE_SUCCESS: 'Attendance record deleted successfully',
    GET_SUCCESS: 'Attendance record retrieved successfully',
    GET_LIST_SUCCESS: 'Attendance record list retrieved successfully',
    NOT_FOUND: 'Attendance record not found',
    ALREADY_EXISTS: 'Attendance record already exists',
    CHECKIN_SUCCESS: 'Check-in successful'
  },
  wallet: {
    CREATE_SUCCESS: 'Wallet created successfully',
    UPDATE_SUCCESS: 'Wallet updated successfully',
    DELETE_SUCCESS: 'Wallet deleted successfully',
    GET_SUCCESS: 'Wallet retrieved successfully',
    GET_LIST_SUCCESS: 'Wallet list retrieved successfully',
    NOT_FOUND: 'Wallet not found',
    ALREADY_EXISTS: 'Wallet already exists',
    INVALID_DATA: 'Invalid wallet data',
    INSUFFICIENT_BALANCE: 'Insufficient wallet balance'
  },
  wallet_transaction: {
    CREATE_SUCCESS: 'Wallet transaction created successfully',
    UPDATE_SUCCESS: 'Wallet transaction updated successfully',
    DELETE_SUCCESS: 'Wallet transaction deleted successfully',
    GET_SUCCESS: 'Wallet transaction retrieved successfully',
    GET_LIST_SUCCESS: 'Wallet transaction list retrieved successfully',
    NOT_FOUND: 'Wallet transaction not found',
    ALREADY_EXISTS: 'Wallet transaction already exists',
    INVALID_DATA: 'Invalid wallet transaction data'
  },
  shop_banner: {
    CREATE_SUCCESS: 'Shop banner created successfully',
    UPDATE_SUCCESS: 'Shop banner updated successfully',
    DELETE_SUCCESS: 'Shop banner deleted successfully',
    GET_SUCCESS: 'Shop banner retrieved successfully',
    GET_LIST_SUCCESS: 'Shop banner list retrieved successfully',
    NOT_FOUND: 'Shop banner not found',
    ALREADY_EXISTS: 'Shop banner already exists',
    INVALID_DATA: 'Invalid shop banner data',
    ONLY_ONE_ACTIVE: 'Only one shop banner can be active at a time',
    INVALID_AMOUNT: 'Invalid amount for shop banner'
  },
  shop_item: {
    CREATE_SUCCESS: 'Shop item created successfully',
    UPDATE_SUCCESS: 'Shop item updated successfully',
    DELETE_SUCCESS: 'Shop item deleted successfully',
    GET_SUCCESS: 'Shop item retrieved successfully',
    GET_LIST_SUCCESS: 'Shop item list retrieved successfully',
    NOT_FOUND: 'Shop item not found',
    ALREADY_EXISTS: 'Shop item already exists',
    INVALID_DATA: 'Invalid shop item data',
    SHOP_BANNER_INVALID: 'Shop banner is invalid or expired',
    SHOP_BANNER_INACTIVE: 'Shop banner is inactive',
    SHOP_BANNER_ACTIVE: 'Shop banner is active',
    SHOP_BANNER_EXPIRED: 'Shop banner is expired',
    POKEMON_DUPLICATE: 'Pokémon already exists in this banner',
    MAX_ITEMS_EXCEEDED: 'Number of items exceeds the banner limit'
  },
  shop_purchase: {
    CREATE_SUCCESS: 'Shop purchase created successfully',
    UPDATE_SUCCESS: 'Shop purchase updated successfully',
    DELETE_SUCCESS: 'Shop purchase deleted successfully',
    GET_SUCCESS: 'Shop purchase retrieved successfully',
    GET_LIST_SUCCESS: 'Shop purchase list retrieved successfully',
    NOT_FOUND: 'Shop purchase not found',
    ALREADY_EXISTS: 'Shop purchase already exists',
    INVALID_DATA: 'Invalid shop purchase data',
    PURCHASE_LIMIT_REACHED: 'Purchase limit reached for this item',
    MISSING_PREVIOUS_POKEMON:
      'You need to own the previous Pokémon before purchasing this one',
    SHOP_NOT_OPEN: 'The shop is currently not open'
  },
  gacha_banner: {
    CREATE_SUCCESS: 'Gacha banner created successfully',
    UPDATE_SUCCESS: 'Gacha banner updated successfully',
    DELETE_SUCCESS: 'Gacha banner deleted successfully',
    GET_SUCCESS: 'Gacha banner retrieved successfully',
    GET_LIST_SUCCESS: 'Gacha banner list retrieved successfully',

    NOT_FOUND: 'Gacha banner not found',
    ALREADY_EXISTS: 'Gacha banner already exists',
    INVALID_DATA: 'Invalid gacha banner data',
    ACTIVE_LIMIT_EXCEEDED: 'Active banner limit exceeded (maximum 2 banners allowed)'
  },
  gacha_item_rate: {
    CREATE_SUCCESS: 'Gacha item rate created successfully',
    UPDATE_SUCCESS: 'Gacha item rate updated successfully',
    DELETE_SUCCESS: 'Gacha item rate deleted successfully',
    GET_SUCCESS: 'Gacha item rate retrieved successfully',
    GET_LIST_SUCCESS: 'Gacha item rate list retrieved successfully',
    NOT_FOUND: 'Gacha item rate not found',
    ALREADY_EXISTS: 'Gacha item rate already exists',
    INVALID_DATA: 'Invalid gacha item rate data'
  },
  gacha_item: {
    CREATE_SUCCESS: 'Gacha item created successfully',
    UPDATE_SUCCESS: 'Gacha item updated successfully',
    DELETE_SUCCESS: 'Gacha item deleted successfully',
    GET_SUCCESS: 'Gacha item retrieved successfully',
    GET_LIST_SUCCESS: 'Gacha item list retrieved successfully',
    NOT_FOUND: 'Gacha item not found',
    ALREADY_EXISTS: 'Gacha item already exists',
    INVALID_DATA: 'Invalid gacha item data',
    GACHA_BANNER_INVALID: 'Gacha banner is invalid or expired',
    GACHA_BANNER_INACTIVE: 'Gacha banner is inactive',
    GACHA_BANNER_ACTIVE: 'Gacha banner is active',
    GACHA_BANNER_EXPIRED: 'Gacha banner is expired',
    POKEMON_DUPLICATE: 'Pokémon already exists in this banner',
    MAX_ITEMS_EXCEEDED: 'Number of items exceeds the banner limit',
    POKEMON_HAS_PREV_EVOLUTION: 'Pokémon has a previous evolution form',
    POKEMON_INVALID_RARITY_WITH_STAR_TYPE_TO_ADD:
      'Pokémon rarity is not compatible with the star type to be added'
  },
  shop_rarity_price: {
    CREATE_SUCCESS: 'Shop rarity price created successfully',
    UPDATE_SUCCESS: 'Shop rarity price updated successfully',

    DELETE_SUCCESS: 'Shop rarity price deleted successfully',
    GET_SUCCESS: 'Shop rarity price retrieved successfully',
    GET_LIST_SUCCESS: 'Shop rarity price list retrieved successfully',
    NOT_FOUND: 'Shop rarity price not found',

    ALREADY_EXISTS: 'Shop rarity price already exists',
    INVALID_DATA: 'Invalid shop rarity price data'
  },
  user_gacha_pity: {
    CREATE_SUCCESS: 'User gacha pity created successfully',
    UPDATE_SUCCESS: 'User gacha pity updated successfully',
    GET_SUCCESS: 'User gacha pity retrieved successfully',
    GET_LIST_SUCCESS: 'User gacha pity list retrieved successfully',
    NOT_FOUND: 'User gacha pity not found',
    ALREADY_EXISTS: 'User gacha pity already exists',
    INVALID_DATA: 'Invalid user gacha pity data',
    HAS_PENDING: 'User already has a pending gacha pity'
  },
  gacha_purchase: {
    CREATE_SUCCESS: 'Gacha purchase created successfully',
    UPDATE_SUCCESS: 'Gacha purchase updated successfully',
    DELETE_SUCCESS: 'Gacha purchase deleted successfully',
    GET_SUCCESS: 'Gacha purchase retrieved successfully',
    GET_LIST_SUCCESS: 'Gacha purchase list retrieved successfully',
    NOT_FOUND: 'Gacha purchase not found',
    ALREADY_EXISTS: 'Gacha purchase already exists',
    INVALID_DATA: 'Invalid gacha purchase data'
  },
  gacha_roll_history: {
    CREATE_SUCCESS: 'Gacha roll history created successfully',
    UPDATE_SUCCESS: 'Gacha roll history updated successfully',
    DELETE_SUCCESS: 'Gacha roll history deleted successfully',
    GET_SUCCESS: 'Gacha roll history retrieved successfully',
    GET_LIST_SUCCESS: 'Gacha roll history list retrieved successfully',
    NOT_FOUND: 'Gacha roll history not found',
    ALREADY_EXISTS: 'Gacha roll history already exists',
    INVALID_DATA: 'Invalid gacha roll history data'
  }
}
